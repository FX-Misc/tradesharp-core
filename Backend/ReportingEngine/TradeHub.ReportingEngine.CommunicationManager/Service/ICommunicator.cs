using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TradeHub.Common.Core.DomainModels.OrderDomain;
using TradeHub.Common.Core.Repositories.Parameters;

namespace TradeHub.ReportingEngine.CommunicationManager.Service
{
    /// <summary>
    /// Blueprint for the communicators to give access to Reporting Engine
    /// </summary>
    public interface ICommunicator
    {
        /// <summary>
        /// Event Raised to notify listeners about available Order Report
        /// </summary>
        event Action<IList<object[]>> OrderReportReceivedEvent;

        /// <summary>
        /// Event Raised to notify listeners about available Profit Loss Report
        /// </summary>
        event Action<ProfitLossStats> ProfitLossReportReceivedEvent;

        /// <summary>
        /// Event Raised to notify listeners about incoming Order Report Request
        /// </summary>
        event Action<Dictionary<OrderParameters, string>> RequestOrderReportEvent;

        /// <summary>
        /// Event Raised to notify listeners about incoming Profit Loss Report Request
        /// </summary>
        event Action<Dictionary<TradeParameters, string>> RequestProfitLossReportEvent;

        /// <summary>
        /// Passes required parameters to intended function to receive receive orders information
        /// </summary>
        /// <param name="parameters"></param>
        void RequestOrderReport(Dictionary<OrderParameters, string> parameters);

        /// <summary>
        /// Passes required parameters to intended function to receive receive Profit Loss information
        /// </summary>
        /// <param name="parameters"></param>
        void RequestProfitLossReport(Dictionary<TradeParameters, string> parameters);

        /// <summary>
        /// Called when requested Order Report is generated by the system
        /// </summary>
        /// <param name="report"></param>
        void OrderReportReceived(IList<object[]> report);

        /// <summary>
        /// Called when requested Profit Loss Report is generated by the system
        /// </summary>
        /// <param name="report"></param>
        void ProfitLossReportReceived(ProfitLossStats report);
    }
}
